<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>


<p id="notice"><%= notice %></p>

<h1>Books</h1>
<input id="archivo_cargado" type="file" />
  <button type="button"  onclick="importar_excel()"> importar </button>
<table>
  <thead>
    <tr>
      <th>Title</th>
      <th>Author</th>
      <th>Genre</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @books.each do |book| %>
      <tr>
        <td><%= book.title %></td>
        <td><%= book.author %></td>
        <td><%= book.genre %></td>
        <td><%= link_to 'Show', book %></td>
        <td><%= link_to 'Edit', edit_book_path(book) %></td>
        <td><%= link_to 'Destroy', book, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Book', new_book_path %>
<br>
<%= link_to 'excel', download_books_path ,target: '_blank' %>


<script>
  function importar_excel(){
    // Obtiene el archivo cargado
    var archivo_seleccionado = document.getElementById("archivo_cargado").files;
    var valor_data64 = ""

    // Utilizar la posicion 0 es suficiente
    // contiene todo el archivo
    var fileToLoad = archivo_seleccionado[0];

    // Leer archivo
    var fileReader = new FileReader();

    // onload es ejecutado cuando el  contenido es leído
    fileReader.onload = function(fileLoadedEvent){

      // Contenido en formato base 64
      valor_data64 = fileLoadedEvent.target.result
      valor_data64 = valor_data64.replace("data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,", "").replace("data:application/xlsx;base64,", "")

      // Crear el objeto xlsx
      var objeto_xlsx = xlsx(valor_data64);
      book = objeto_xlsx.worksheets[0].data

      message = ""
      // Filas del excel
      for (var fila = 0; fila < book.length ; fila++) {
        // Columnas del excel
        for (var columna = 0; columna < book[fila].length; columna++) {
          console.log(book[fila][columna].value)
          message = message + book[fila][columna].value + "\n"
        }
      }
      alert(message)
    }

    // El método readAsDataURL es usado para leer el contenido del
    // especificado Blob o File.
    fileReader.readAsDataURL(fileToLoad);
  }

</script>
